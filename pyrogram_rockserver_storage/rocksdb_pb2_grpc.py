# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import pyrogram_rockserver_storage.rocksdb_pb2 as rocksdb__pb2

GRPC_GENERATED_VERSION = '1.72.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in rocksdb_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class RocksDBServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.openTransaction = channel.unary_unary(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/openTransaction',
                request_serializer=rocksdb__pb2.OpenTransactionRequest.SerializeToString,
                response_deserializer=rocksdb__pb2.OpenTransactionResponse.FromString,
                _registered_method=True)
        self.closeTransaction = channel.unary_unary(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/closeTransaction',
                request_serializer=rocksdb__pb2.CloseTransactionRequest.SerializeToString,
                response_deserializer=rocksdb__pb2.CloseTransactionResponse.FromString,
                _registered_method=True)
        self.closeFailedUpdate = channel.unary_unary(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/closeFailedUpdate',
                request_serializer=rocksdb__pb2.CloseFailedUpdateRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.createColumn = channel.unary_unary(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/createColumn',
                request_serializer=rocksdb__pb2.CreateColumnRequest.SerializeToString,
                response_deserializer=rocksdb__pb2.CreateColumnResponse.FromString,
                _registered_method=True)
        self.deleteColumn = channel.unary_unary(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/deleteColumn',
                request_serializer=rocksdb__pb2.DeleteColumnRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.getColumnId = channel.unary_unary(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/getColumnId',
                request_serializer=rocksdb__pb2.GetColumnIdRequest.SerializeToString,
                response_deserializer=rocksdb__pb2.GetColumnIdResponse.FromString,
                _registered_method=True)
        self.put = channel.unary_unary(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/put',
                request_serializer=rocksdb__pb2.PutRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.putBatch = channel.stream_unary(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/putBatch',
                request_serializer=rocksdb__pb2.PutBatchRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.putMulti = channel.stream_unary(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/putMulti',
                request_serializer=rocksdb__pb2.PutMultiRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.putMultiList = channel.unary_unary(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/putMultiList',
                request_serializer=rocksdb__pb2.PutMultiListRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.putGetPrevious = channel.unary_unary(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/putGetPrevious',
                request_serializer=rocksdb__pb2.PutRequest.SerializeToString,
                response_deserializer=rocksdb__pb2.Previous.FromString,
                _registered_method=True)
        self.putMultiGetPrevious = channel.stream_stream(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/putMultiGetPrevious',
                request_serializer=rocksdb__pb2.PutMultiRequest.SerializeToString,
                response_deserializer=rocksdb__pb2.Previous.FromString,
                _registered_method=True)
        self.putGetDelta = channel.unary_unary(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/putGetDelta',
                request_serializer=rocksdb__pb2.PutRequest.SerializeToString,
                response_deserializer=rocksdb__pb2.Delta.FromString,
                _registered_method=True)
        self.putMultiGetDelta = channel.stream_stream(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/putMultiGetDelta',
                request_serializer=rocksdb__pb2.PutMultiRequest.SerializeToString,
                response_deserializer=rocksdb__pb2.Delta.FromString,
                _registered_method=True)
        self.putGetChanged = channel.unary_unary(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/putGetChanged',
                request_serializer=rocksdb__pb2.PutRequest.SerializeToString,
                response_deserializer=rocksdb__pb2.Changed.FromString,
                _registered_method=True)
        self.putMultiGetChanged = channel.stream_stream(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/putMultiGetChanged',
                request_serializer=rocksdb__pb2.PutMultiRequest.SerializeToString,
                response_deserializer=rocksdb__pb2.Changed.FromString,
                _registered_method=True)
        self.putGetPreviousPresence = channel.unary_unary(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/putGetPreviousPresence',
                request_serializer=rocksdb__pb2.PutRequest.SerializeToString,
                response_deserializer=rocksdb__pb2.PreviousPresence.FromString,
                _registered_method=True)
        self.putMultiGetPreviousPresence = channel.stream_stream(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/putMultiGetPreviousPresence',
                request_serializer=rocksdb__pb2.PutMultiRequest.SerializeToString,
                response_deserializer=rocksdb__pb2.PreviousPresence.FromString,
                _registered_method=True)
        self.get = channel.unary_unary(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/get',
                request_serializer=rocksdb__pb2.GetRequest.SerializeToString,
                response_deserializer=rocksdb__pb2.GetResponse.FromString,
                _registered_method=True)
        self.getForUpdate = channel.unary_unary(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/getForUpdate',
                request_serializer=rocksdb__pb2.GetRequest.SerializeToString,
                response_deserializer=rocksdb__pb2.UpdateBegin.FromString,
                _registered_method=True)
        self.exists = channel.unary_unary(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/exists',
                request_serializer=rocksdb__pb2.GetRequest.SerializeToString,
                response_deserializer=rocksdb__pb2.PreviousPresence.FromString,
                _registered_method=True)
        self.openIterator = channel.unary_unary(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/openIterator',
                request_serializer=rocksdb__pb2.OpenIteratorRequest.SerializeToString,
                response_deserializer=rocksdb__pb2.OpenIteratorResponse.FromString,
                _registered_method=True)
        self.closeIterator = channel.unary_unary(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/closeIterator',
                request_serializer=rocksdb__pb2.CloseIteratorRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.seekTo = channel.unary_unary(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/seekTo',
                request_serializer=rocksdb__pb2.SeekToRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.subsequent = channel.unary_unary(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/subsequent',
                request_serializer=rocksdb__pb2.SubsequentRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.subsequentExists = channel.unary_unary(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/subsequentExists',
                request_serializer=rocksdb__pb2.SubsequentRequest.SerializeToString,
                response_deserializer=rocksdb__pb2.PreviousPresence.FromString,
                _registered_method=True)
        self.subsequentMultiGet = channel.unary_stream(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/subsequentMultiGet',
                request_serializer=rocksdb__pb2.SubsequentRequest.SerializeToString,
                response_deserializer=rocksdb__pb2.KV.FromString,
                _registered_method=True)
        self.reduceRangeFirstAndLast = channel.unary_unary(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/reduceRangeFirstAndLast',
                request_serializer=rocksdb__pb2.GetRangeRequest.SerializeToString,
                response_deserializer=rocksdb__pb2.FirstAndLast.FromString,
                _registered_method=True)
        self.reduceRangeEntriesCount = channel.unary_unary(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/reduceRangeEntriesCount',
                request_serializer=rocksdb__pb2.GetRangeRequest.SerializeToString,
                response_deserializer=rocksdb__pb2.EntriesCount.FromString,
                _registered_method=True)
        self.getAllInRange = channel.unary_stream(
                '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/getAllInRange',
                request_serializer=rocksdb__pb2.GetRangeRequest.SerializeToString,
                response_deserializer=rocksdb__pb2.KV.FromString,
                _registered_method=True)


class RocksDBServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def openTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def closeTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def closeFailedUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createColumn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteColumn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getColumnId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def put(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def putBatch(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def putMulti(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def putMultiList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def putGetPrevious(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def putMultiGetPrevious(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def putGetDelta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def putMultiGetDelta(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def putGetChanged(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def putMultiGetChanged(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def putGetPreviousPresence(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def putMultiGetPreviousPresence(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getForUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def exists(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def openIterator(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def closeIterator(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def seekTo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def subsequent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def subsequentExists(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def subsequentMultiGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def reduceRangeFirstAndLast(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def reduceRangeEntriesCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAllInRange(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RocksDBServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'openTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.openTransaction,
                    request_deserializer=rocksdb__pb2.OpenTransactionRequest.FromString,
                    response_serializer=rocksdb__pb2.OpenTransactionResponse.SerializeToString,
            ),
            'closeTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.closeTransaction,
                    request_deserializer=rocksdb__pb2.CloseTransactionRequest.FromString,
                    response_serializer=rocksdb__pb2.CloseTransactionResponse.SerializeToString,
            ),
            'closeFailedUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.closeFailedUpdate,
                    request_deserializer=rocksdb__pb2.CloseFailedUpdateRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'createColumn': grpc.unary_unary_rpc_method_handler(
                    servicer.createColumn,
                    request_deserializer=rocksdb__pb2.CreateColumnRequest.FromString,
                    response_serializer=rocksdb__pb2.CreateColumnResponse.SerializeToString,
            ),
            'deleteColumn': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteColumn,
                    request_deserializer=rocksdb__pb2.DeleteColumnRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'getColumnId': grpc.unary_unary_rpc_method_handler(
                    servicer.getColumnId,
                    request_deserializer=rocksdb__pb2.GetColumnIdRequest.FromString,
                    response_serializer=rocksdb__pb2.GetColumnIdResponse.SerializeToString,
            ),
            'put': grpc.unary_unary_rpc_method_handler(
                    servicer.put,
                    request_deserializer=rocksdb__pb2.PutRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'putBatch': grpc.stream_unary_rpc_method_handler(
                    servicer.putBatch,
                    request_deserializer=rocksdb__pb2.PutBatchRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'putMulti': grpc.stream_unary_rpc_method_handler(
                    servicer.putMulti,
                    request_deserializer=rocksdb__pb2.PutMultiRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'putMultiList': grpc.unary_unary_rpc_method_handler(
                    servicer.putMultiList,
                    request_deserializer=rocksdb__pb2.PutMultiListRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'putGetPrevious': grpc.unary_unary_rpc_method_handler(
                    servicer.putGetPrevious,
                    request_deserializer=rocksdb__pb2.PutRequest.FromString,
                    response_serializer=rocksdb__pb2.Previous.SerializeToString,
            ),
            'putMultiGetPrevious': grpc.stream_stream_rpc_method_handler(
                    servicer.putMultiGetPrevious,
                    request_deserializer=rocksdb__pb2.PutMultiRequest.FromString,
                    response_serializer=rocksdb__pb2.Previous.SerializeToString,
            ),
            'putGetDelta': grpc.unary_unary_rpc_method_handler(
                    servicer.putGetDelta,
                    request_deserializer=rocksdb__pb2.PutRequest.FromString,
                    response_serializer=rocksdb__pb2.Delta.SerializeToString,
            ),
            'putMultiGetDelta': grpc.stream_stream_rpc_method_handler(
                    servicer.putMultiGetDelta,
                    request_deserializer=rocksdb__pb2.PutMultiRequest.FromString,
                    response_serializer=rocksdb__pb2.Delta.SerializeToString,
            ),
            'putGetChanged': grpc.unary_unary_rpc_method_handler(
                    servicer.putGetChanged,
                    request_deserializer=rocksdb__pb2.PutRequest.FromString,
                    response_serializer=rocksdb__pb2.Changed.SerializeToString,
            ),
            'putMultiGetChanged': grpc.stream_stream_rpc_method_handler(
                    servicer.putMultiGetChanged,
                    request_deserializer=rocksdb__pb2.PutMultiRequest.FromString,
                    response_serializer=rocksdb__pb2.Changed.SerializeToString,
            ),
            'putGetPreviousPresence': grpc.unary_unary_rpc_method_handler(
                    servicer.putGetPreviousPresence,
                    request_deserializer=rocksdb__pb2.PutRequest.FromString,
                    response_serializer=rocksdb__pb2.PreviousPresence.SerializeToString,
            ),
            'putMultiGetPreviousPresence': grpc.stream_stream_rpc_method_handler(
                    servicer.putMultiGetPreviousPresence,
                    request_deserializer=rocksdb__pb2.PutMultiRequest.FromString,
                    response_serializer=rocksdb__pb2.PreviousPresence.SerializeToString,
            ),
            'get': grpc.unary_unary_rpc_method_handler(
                    servicer.get,
                    request_deserializer=rocksdb__pb2.GetRequest.FromString,
                    response_serializer=rocksdb__pb2.GetResponse.SerializeToString,
            ),
            'getForUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.getForUpdate,
                    request_deserializer=rocksdb__pb2.GetRequest.FromString,
                    response_serializer=rocksdb__pb2.UpdateBegin.SerializeToString,
            ),
            'exists': grpc.unary_unary_rpc_method_handler(
                    servicer.exists,
                    request_deserializer=rocksdb__pb2.GetRequest.FromString,
                    response_serializer=rocksdb__pb2.PreviousPresence.SerializeToString,
            ),
            'openIterator': grpc.unary_unary_rpc_method_handler(
                    servicer.openIterator,
                    request_deserializer=rocksdb__pb2.OpenIteratorRequest.FromString,
                    response_serializer=rocksdb__pb2.OpenIteratorResponse.SerializeToString,
            ),
            'closeIterator': grpc.unary_unary_rpc_method_handler(
                    servicer.closeIterator,
                    request_deserializer=rocksdb__pb2.CloseIteratorRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'seekTo': grpc.unary_unary_rpc_method_handler(
                    servicer.seekTo,
                    request_deserializer=rocksdb__pb2.SeekToRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'subsequent': grpc.unary_unary_rpc_method_handler(
                    servicer.subsequent,
                    request_deserializer=rocksdb__pb2.SubsequentRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'subsequentExists': grpc.unary_unary_rpc_method_handler(
                    servicer.subsequentExists,
                    request_deserializer=rocksdb__pb2.SubsequentRequest.FromString,
                    response_serializer=rocksdb__pb2.PreviousPresence.SerializeToString,
            ),
            'subsequentMultiGet': grpc.unary_stream_rpc_method_handler(
                    servicer.subsequentMultiGet,
                    request_deserializer=rocksdb__pb2.SubsequentRequest.FromString,
                    response_serializer=rocksdb__pb2.KV.SerializeToString,
            ),
            'reduceRangeFirstAndLast': grpc.unary_unary_rpc_method_handler(
                    servicer.reduceRangeFirstAndLast,
                    request_deserializer=rocksdb__pb2.GetRangeRequest.FromString,
                    response_serializer=rocksdb__pb2.FirstAndLast.SerializeToString,
            ),
            'reduceRangeEntriesCount': grpc.unary_unary_rpc_method_handler(
                    servicer.reduceRangeEntriesCount,
                    request_deserializer=rocksdb__pb2.GetRangeRequest.FromString,
                    response_serializer=rocksdb__pb2.EntriesCount.SerializeToString,
            ),
            'getAllInRange': grpc.unary_stream_rpc_method_handler(
                    servicer.getAllInRange,
                    request_deserializer=rocksdb__pb2.GetRangeRequest.FromString,
                    response_serializer=rocksdb__pb2.KV.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'it.cavallium.rockserver.core.common.api.proto.RocksDBService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('it.cavallium.rockserver.core.common.api.proto.RocksDBService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class RocksDBService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def openTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/openTransaction',
            rocksdb__pb2.OpenTransactionRequest.SerializeToString,
            rocksdb__pb2.OpenTransactionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def closeTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/closeTransaction',
            rocksdb__pb2.CloseTransactionRequest.SerializeToString,
            rocksdb__pb2.CloseTransactionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def closeFailedUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/closeFailedUpdate',
            rocksdb__pb2.CloseFailedUpdateRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createColumn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/createColumn',
            rocksdb__pb2.CreateColumnRequest.SerializeToString,
            rocksdb__pb2.CreateColumnResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def deleteColumn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/deleteColumn',
            rocksdb__pb2.DeleteColumnRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getColumnId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/getColumnId',
            rocksdb__pb2.GetColumnIdRequest.SerializeToString,
            rocksdb__pb2.GetColumnIdResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def put(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/put',
            rocksdb__pb2.PutRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def putBatch(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/putBatch',
            rocksdb__pb2.PutBatchRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def putMulti(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/putMulti',
            rocksdb__pb2.PutMultiRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def putMultiList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/putMultiList',
            rocksdb__pb2.PutMultiListRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def putGetPrevious(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/putGetPrevious',
            rocksdb__pb2.PutRequest.SerializeToString,
            rocksdb__pb2.Previous.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def putMultiGetPrevious(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/putMultiGetPrevious',
            rocksdb__pb2.PutMultiRequest.SerializeToString,
            rocksdb__pb2.Previous.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def putGetDelta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/putGetDelta',
            rocksdb__pb2.PutRequest.SerializeToString,
            rocksdb__pb2.Delta.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def putMultiGetDelta(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/putMultiGetDelta',
            rocksdb__pb2.PutMultiRequest.SerializeToString,
            rocksdb__pb2.Delta.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def putGetChanged(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/putGetChanged',
            rocksdb__pb2.PutRequest.SerializeToString,
            rocksdb__pb2.Changed.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def putMultiGetChanged(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/putMultiGetChanged',
            rocksdb__pb2.PutMultiRequest.SerializeToString,
            rocksdb__pb2.Changed.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def putGetPreviousPresence(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/putGetPreviousPresence',
            rocksdb__pb2.PutRequest.SerializeToString,
            rocksdb__pb2.PreviousPresence.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def putMultiGetPreviousPresence(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/putMultiGetPreviousPresence',
            rocksdb__pb2.PutMultiRequest.SerializeToString,
            rocksdb__pb2.PreviousPresence.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/get',
            rocksdb__pb2.GetRequest.SerializeToString,
            rocksdb__pb2.GetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getForUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/getForUpdate',
            rocksdb__pb2.GetRequest.SerializeToString,
            rocksdb__pb2.UpdateBegin.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def exists(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/exists',
            rocksdb__pb2.GetRequest.SerializeToString,
            rocksdb__pb2.PreviousPresence.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def openIterator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/openIterator',
            rocksdb__pb2.OpenIteratorRequest.SerializeToString,
            rocksdb__pb2.OpenIteratorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def closeIterator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/closeIterator',
            rocksdb__pb2.CloseIteratorRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def seekTo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/seekTo',
            rocksdb__pb2.SeekToRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def subsequent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/subsequent',
            rocksdb__pb2.SubsequentRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def subsequentExists(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/subsequentExists',
            rocksdb__pb2.SubsequentRequest.SerializeToString,
            rocksdb__pb2.PreviousPresence.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def subsequentMultiGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/subsequentMultiGet',
            rocksdb__pb2.SubsequentRequest.SerializeToString,
            rocksdb__pb2.KV.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def reduceRangeFirstAndLast(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/reduceRangeFirstAndLast',
            rocksdb__pb2.GetRangeRequest.SerializeToString,
            rocksdb__pb2.FirstAndLast.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def reduceRangeEntriesCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/reduceRangeEntriesCount',
            rocksdb__pb2.GetRangeRequest.SerializeToString,
            rocksdb__pb2.EntriesCount.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getAllInRange(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/it.cavallium.rockserver.core.common.api.proto.RocksDBService/getAllInRange',
            rocksdb__pb2.GetRangeRequest.SerializeToString,
            rocksdb__pb2.KV.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
